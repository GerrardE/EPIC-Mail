swagger: "2.0"
info:
  description: "This is a simple web application for sending emails"
  version: "1.0.0"
  title: "EPIC-Mail"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "ezeugwagerrard@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "epic-m.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "users"
  description: "Users"
- name: "messages"
  description: "Emails"
- name: "Groups"
  description: "Create groups"
schemes:
- "https"
- "http"
paths:
  /auth/signup:
    post:
      tags:
      - "users"
      summary: "Create a new user account"
      description: "Creates a new user and adds it to the database"
      operationId: "userSignup"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User to be added"
        required: true
        schema:
          $ref: "#/definitions/UserSignUp"
      responses:
        201:
          description: "Success: User created successfully!"
  /auth/login:
    post:
      tags:
      - "users"
      summary: "Log in user"
      description: "Logs in a user to EPIC-Mail"
      operationId: "userLogin"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User to be logged in"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        201:
          description: "Success: login successful!"
  /messages:
    post:
      tags:
      - "messages"
      summary: "Create Message"
      description: "User can create and send an email message"
      operationId: "postMessages"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "messages"
        description: "Post message"
        required: false
        schema:
          $ref: "#/definitions/PostMessages"
      responses:
        200:
          description: "Success: Message sent successfully!"
          schema:
            type: "object"
    get:
      tags:
      - "messages"
      summary: "Get Messages"
      description: "Return messages"
      operationId: "getMessages"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "messages"
        description: "Get message"
        required: false
        schema:
          $ref: "#/definitions/GetMessages"
      responses:
        200:
          description: "Success: messages retrieved successfully!"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/GetMessages"
  /messages/unread:
    get:
        tags:
        - "messages"
        summary: "Get Message"
        description: "Return unread messages belonging to a user"
        operationId: "getUnreadMessages"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - in: "body"
          name: "messages"
          description: "Unread messages"
          required: false
          schema:
            $ref: "#/definitions/GetMessagesUnread"
        responses:
          200:
            description: "Success: unread mails retrieved successfully!"
          404:
            description: "Error: you have read all your mails"
            schema:
              type: "object"
              items:
                $ref: "#/definitions/GetMessagesUnread"
  /messages/sent:
    get:
        tags:
        - "messages"
        summary: "Get Sent Message"
        description: "Return sent messages belonging to a user"
        operationId: "getSentMessages"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - in: "body"
          name: "messages"
          description: "Get sent message"
          required: false
          schema:
            $ref: "#/definitions/GetMessagesSent"
        responses:
          200:
            description: "Success: sent mails retrieved successfully!"
          404:
            description: "Error: you have not sent any mail"
            schema:
              type: "object"
              items:
                $ref: "#/definitions/GetMessagesSent"
  /messages/message-id:
    get:
      tags:
      - "messages"
      summary: "Gets a message"
      description: "Gets a specific message belonging to a user"
      operationId: "getMessage"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "messages"
        description: "Get a specific message"
        required: false
        schema:
          $ref: "#/definitions/GetMessagesId"
      responses:
        200:
          description: "Success: mail retrieved successfully!"
        404:
          description: "Error: mail not found"
          schema:
              type: "object"
              items:
                $ref: "#/definitions/GetMessagesId"
    delete:
      tags:
      - "messages"
      summary: "Deletes a message"
      description: "Delete a specific message"
      operationId: "deleteMessage"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "messages"
        description: "Delete a specific message"
        required: false
        schema:
          $ref: "#/definitions/DeleteMessageId"
      responses:
        200:
          description: "Success: mail deleted successfully!"
        404:
          description: "Error: mail not found"
          schema:
              type: "object"
              items:
                $ref: "#/definitions/DeleteMessageId"
definitions:
  UserSignUp:
    type: "object"
    properties:
      id:
        type: "integer"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role:
        type: "integer"
        description: "User can be admin or ordinary user"
    xml:
      name: "User"
  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "UserLogin"
  PostMessages:
    type: "object"
    properties:
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      subject:
        type: "string"
      message:
        type: "string"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "PostMessages"
  GetMessages:
    type: "object"
    properties:
      statusCode:
        type: "string"
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      toEmail:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
      senderId:
        type: "integer"
      receiverId:
        type: "integer"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "GetMessages"
  GetMessagesUnread:
    type: "object"
    properties:
      statusCode:
        type: "integer"
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      toEmail:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
      senderId:
        type: "integer"
      receiverId:
        type: "integer"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "GetMessagesUnread"
  GetMessagesSent:
    type: "object"
    properties:
      statusCode:
        type: "integer"
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      toEmail:
        type: "string"
      subject:
        type: "string"
      message:
        type: "string"
      senderId:
        type: "integer"
      receiverId:
        type: "integer"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "GetMessagesSent"
  GetMessagesId:
    type: "object"
    properties:
      statusCode:
        type: "integer"
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      subject:
        type: "string"
      message:
        type: "string"
      senderId:
        type: "integer"
      receiverId:
        type: "integer"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "GetMessagesId"
  DeleteMessageId:
    type: "object"
    properties:
      statusCode:
        type: "integer"
      id:
        type: "integer"
      createdOn:
        type: "string"
        format: "date"
      subject:
        type: "string"
      message:
        type: "string"
      parentMessageId:
        type: "integer"
      status:
        type: "string"
    xml:
      name: "DeleteMessage"