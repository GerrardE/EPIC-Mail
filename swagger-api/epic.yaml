--- 
basePath: /api/v1
definitions: 
  LoginUser: 
    properties: 
      email: 
        type: string
        uniqueItems: true
      password: 
        type: string
        uniqueItems: true
    required: 
      - email
      - password
    type: object
  PostMenu: 
    properties: 
      category: 
        type: string
        uniqueItems: false
      description: 
        type: string
        uniqueItems: false
      menu: 
        type: string
        uniqueItems: true
      price: 
        type: integer
        uniqueItems: false
      quantity: 
        type: integer
        uniqueItems: false
    required: 
      - menu
      - description
      - category
      - quantity
      - price
    type: object
  PostOrder: 
    properties: 
      mealId: 
        type: integer
        uniqueItems: true
      quantity: 
        type: integer
        uniqueItems: false
    required: 
      - mealId
      - quantity
    type: object
  SignupUser: 
    properties: 
      address: 
        type: string
        uniqueItems: false
      email: 
        type: string
        uniqueItems: true
      firstName: 
        type: string
        uniqueItems: false
      id: 
        type: integer
        uniqueItems: true
      lastName: 
        type: string
        uniqueItems: false
      password: 
        type: string
        uniqueItems: false
      phone: 
        type: string
        uniqueItems: true
    required: 
      - id
      - firstName
      - lastName
      - email
      - password
    type: object
host: epic-m.herokuapp.com
info: 
  contact: 
    email: ezeugwagerrard@gmail.com
  description: "API documentation for EPIC-Mail"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  termsOfService: "http://swagger.io/terms/"
  title: EPIC-Mail
  version: "1.0.0"
paths: 
  /auth/login: 
    post: 
      consumes: 
        - application/json
      description: "Login an existing user into EPIC-Mail"
      operationId: loginUser
      parameters: 
        - 
          description: "Login an existing user"
          in: body
          name: user
          required: true
          schema: 
            $ref: "#/definitions/LoginUser"
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: login successful!"
        400: 
          description: "Bad request"
      summary: "Login a user"
      tags: 
        - Users
  /auth/signup: 
    post: 
      consumes: 
        - application/json
      description: "Create new user on EPIC-Mail"
      operationId: signup
      parameters: 
        - 
          description: "Create new user account"
          in: body
          name: user
          required: true
          schema: 
            $ref: "#/definitions/SignupUser"
      produces: 
        - application/json
      responses: 
        201: 
          description: "Success: User created successfully!"
        400: 
          description: "Bad request"
      summary: "Create a new user"
      tags: 
        - Users
  /messages: 
    get: 
      description: "Get all received messages"
      operationId: getMessages
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: messages retrieved successfully!"
        404: 
          description: "Error: no message found"
      summary: "Fetch all received emails"
      tags: 
        - Messages
    post: 
      description: "Creates or sends an email"
      operationId: postMessages
      parameters: 
        - 
          description: "Create a new message in EPIC-Mail"
          in: body
          name: messages
          required: true
          schema: 
            $ref: "#/definitions/PostMessages"
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: Message sent successfully!"
        400: 
          description: "Bad request"
      summary: "Create or send an email"
      tags: 
        - Messages
  /messages/sent: 
    get: 
      description: "Fetch all sent emails"
      operationId: sentMessages
      parameters: 
        - 
          description: "Get all sent emails on EPIC-Mail"
          in: body
          name: sent
          required: true
          schema: 
            $ref: "#/definitions/SentMessages"
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: sent mails retrieved successfully!"
        404: 
          description: "Error: you have not sent any mail"
      summary: "Get Sent Messages"
      tags: 
        - SentMessages
  /messages/unread: 
    get: 
      description: "Fetch all unread received emails"
      operationId: unreadMessages
      parameters: 
        - 
          description: "Get all unread emails on EPIC-Mail"
          in: body
          name: unread
          required: true
          schema: 
            $ref: "#/definitions/UnreadMessages"
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: unread mails retrieved successfully!"
        404: 
          description: "Error: you have read all your mails"
      summary: "Get Unread Messages"
      tags: 
        - UnreadMessages
  ? "/messages/{id}"
  : 
    get: 
      description: "Get specific mail record on EPIC-Mail"
      operationId: getSpecificMessage
      parameters: 
        - 
          description: "Specific message"
          in: path
          name: id
          required: true
          type: integer
      produces: 
        - application/json
      responses: 
        200: 
          description: "Success: mail retrieved successfully!"
        404: 
          description: "Error: mail not found"
      summary: "Get specific mail record"
      tags: 
        - Messages
schemes: 
  - https
  - http
swagger: "2.0"
tags: 
  - 
    description: "User API Endpoint"
    name: User
  - 
    description: "Messages API Endpoint"
    name: Messages
